// generated by chat gpt

pragma solidity ^0.8.9;

contract AlgoRegistry {
    mapping (string => Object) registeredObjects;
    string[] registeredNames;

    struct Object {
        string name;
        string author;
        string description;
        string mdHash;
    }

    function registerObject(string memory _name, string memory _author, string memory _description, string memory _mdHash) public {
        require(!isRegistered(_name), "Object is already registered");

        Object memory newObject = Object(_name, _author, _description, _mdHash);
        registeredObjects[_name] = newObject;
        registeredNames.push(_name);
    }

    function isRegistered(string memory _name) public view returns (bool) {
        return registeredObjects[_name].name != "";
    }

    function getRegisteredNames() public view returns (string[] memory) {
        return registeredNames;
    }

    function getRegisteredObject(string memory _name) public view returns (string memory, string memory, string memory, string memory) {
        Object memory obj = registeredObjects[_name];
        return (obj.name, obj.author, obj.description, obj.mdHash);
    }
}